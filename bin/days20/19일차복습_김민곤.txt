1.   현재 날짜와 시간 정보를   LocalDateTime 클래스를 사용해서 
     아래와 같은 형식으로 출력하세요 .     
     출력 형식 ) 2023/02/28 화요일   12:17:57.356  

		LocalDateTime ldt = LocalDateTime.now();
		
		String pattern = "yyyy/MM/dd E요일	hh:mm:ss:SSS";
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern(pattern);
		System.out.println(dtf.format(ldt));




2.  String s = "2023.02.28 (화)" 문자열을 LocalDate 클래스로 변환시키세요. 


		String s = "2023.02.28 (화)";
		
		String pattern = "yyyy.MM.dd (E)";
		DateTimeFormatter dtf = DateTimeFormatter.ofPattern(pattern);				
		LocalDate d = LocalDate.parse(s, dtf);
		System.out.println(d.format(dtf));




3. 용어 정리
  1)  프레임워크( framework ) 정의에 대해서 설명하세요. 
	- 표준화 체계이다. 


  2) 컬렉션 프레임워크 정의에 대해서 설명하세요. 
	- 데이터 집합을 저장(관리 - 추가,삭제,수정,검색 등)하는 클래스들을 표준화 체계
	- 데이터를 효율적으로 관리하고 조작하기 위한 표준화된 데이터 구조 및 알고리즘의 집합


  3) 컬렉션 프레임워크의 핵심 인터페이스( 3가지 타입 ) 에 대해서 설명하세요.  
	
	- List 인터페이스 : 특징은 순서유지O, 중복허용O이고, ArrayList, LinkedList, Vector 등이 있다
	
	- Set 인터페이스 : 특징은 순서유지X, 중복허용X이고, HashSet, TreeSet 등이 있다.

	- Map 인터페이스 : 데이터를 키(key)와 값(value)의 쌍으로 관리한다.
			특징: 키는 중복 불가X, 값은 중복 허용O
			빠른 검색과 데이터 매핑에 사용한다.
					



4. ArrayList 컬렉션 클래스를 사용하여 
  1) 팀원들 이름을 요소로 추가하기
		
		ArrayList al = new ArrayList();
		al.add("김민곤");
		al.add("김하은");
		al.add("양희동");



  2) 반복자(iteratror)를 사용해서 모든 요소 출력하기      ***

		for (Iterator iterator = al.iterator(); iterator.hasNext();) {
			String name = (String) iterator.next();
			System.out.println(name);
		}



  3) 팀원 한명을 검색해서 있다면 "홍길동"으로 수정하기

		int index = al.indexOf("양희동");
		al.set(index, "홍길동");



  4) "홍길동"을 검색해서 있다면 삭제하기. 

		int index1 = al.indexOf("홍길동");
		al.remove(index1);


  
5. 이름, 나이 필드를 가진 Person 클래스를 선언하고
   ArrayList 컬렉션 클래스에  Person 객체를 요소로 추가하고 
   이름으로 오름차순 정렬해서    출력하는 코딩을 하세요 .. 
    

	public static void main(String[] args) {

		ArrayList m = new ArrayList();
		Person p1 = new Person();
		Person p2 = new Person();
		Person p3 = new Person();

		Scanner sc = new Scanner(System.in);
		System.out.println("이름을 입력하세요");
		p1.name = sc.nextLine();
		System.out.println("이름을 입력하세요");
		p2.name = sc.nextLine();
		System.out.println("이름을 입력하세요");
		p3.name = sc.nextLine();

		m.add(p1.name);
		m.add(p2.name);
		m.add(p3.name);

		System.out.println(m);
		m.sort(null);

		System.out.println(m);

	} // main

} // class


class Person {
	String name;
	int age;
}




6.  java.time 패키지 클래스 사용. ( LocalDateTime 사용)
    1) 설문 시작일 25.12.15  09:00:00
    2) 설문 종료일 25.1.22   09:00:00
   오늘 현재 설문 가능한여부를 출력하세요.

		LocalDateTime start = LocalDateTime.of(2024, 12, 15, 9, 0, 0);
		LocalDateTime end = LocalDateTime.of(2025, 1, 25, 9, 0, 0);
		LocalDateTime now = LocalDateTime.now();
		
       		if (now.isAfter(start) && now.isBefore(end)) {
            		System.out.println("설문 가능");
        	} else {
            		System.out.println("설문 불가능");
        	}




7. 열거자와 반복자에 대해서 설명하세요. 

	- 열거자 : enumerator
		컬렉션 내의 요소를 읽을 때 사용된다. Enumeration 인터페이스를 통해 구현된다.	
		복사하여 사용하기 때문에 원본이 변해도 영향을 받지 않는다.

	- 반복자 : iterator 
		컬렉션의 모든 요소를 순차적으로 탐색하거나 삭제할 수 있다.
		원본을 그대로 사용하기 때문에 원본이 변하면 바로 정지한다.







  
