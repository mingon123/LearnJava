1. 필드(멤버변수)를 초기화 하는 방법 및 우선 처리 순위에 대해서 설명하세요

	- 초기화 하는 방법
	1) 명시적 초기화
	2) 생성자 초기화
	3) 초기화 블럭
		(1) 인스턴스 초기화 블럭
		(2) 클래스 초기화 블럭

	- 우선 처리 순위
	1) 명시적 초기화
	2) 클래스 초기화 블록
	3) 인스턴스변수 초기화 블록
	4) 생성자 초기화



2. 클래스 간의 관계에 대해서 설명하세요 .
 1) has-a관계( 소속관계 ) - 차와 엔진처럼 엔진이 차에 소속되어있는 관계
 2) is-a관계( 상속관계 ) - 부모클래스에서 코드를 물려받는 상속관계
 


3. 상속(inheritance)에 대해서 설명하세요 
  ㄱ. 정의 :  기존 클래스를 재사용하여 새로운 클래스를 작성(선언)하는 것.
  ㄴ. 장점 :  코드의 재사용 + 코딩양이 적다 -> 생산성 향상, 유지보수 용이
  ㄷ. 선언형식 : class 새로선언클래스 extends 기존 클래스 { }
   


4. 모든 클래스의 최상위 부모클래스는 ?
	Object 클래스



5. 오버로딩(overload)과 오버라이딩(override)에 대해서 설명하세요 .
	오버로딩 : 중복선언 - 같은 이름의 메서드를 매개변수의 타입이나 갯수를 다르게 정의하는 것.
	오버라이딩 : 재정의함수 - 물려받은 코드(매개변수 등 변경 X) 안의 내용을 재정의(수정) 쓰겠다.



6. this와 super 키워드에 대해서 설명하세요 . 
	this :  인스턴스가 생성되면 자기자신의 주소를 갖는 참조변수
		1) 멤버를 가리킬 때의 this 용도
		2) 생성자에서 또 다른 생성자를 호출할 때의 this
		3) 단독(홀로)으로 사용될 때의 this

	super : 자식 클래스에서 부모 클래스의 멤버를 참조하는 데 사용되는 참조변수
		1) 부모의 멤버를 가리킬 때의 super
		2) 생성자에서 또 다른 부모의 생성자를 호출할 때의 super()
		3) 단독으로 사용X



7. 단일 상속과 다중 상속에 대해서 설명하세요 .
	단일 상속 : extends해서 물려받은 상속. 
	다중 상속 : java에서는 지원하지 않음. 서로 다른 클래스로부터 상속 받은 멤버(필드) 간의 이름이 같은 경우 구별할 방법이 없다. -> 인터페이스로 대체



8. @Override 애노테이션(Annotation)에 대해서 설명하세요.
	- @Override를 함수 위에 붙여서 사용하며, 물려받은 코드(매개변수 등 변경 X) 안의 내용을 재정의(수정)해서 쓰겠다.



9. [오버라이딩 조건]에 대해서 설명하세요 .
	1) 오버라이딩을 할 때 메서드명은 동일해야 한다.
	2) 매개변수 타입 + 갯수 동일해야한다.
	3) 리턴자료형도 동일해야 한다.
	4) 접근 지정자는 부모보다 같거나 큰 접근지정자를 사용할 수 없다.
	5) 예외는 부모의 예외보다 많을 수 없다.
	6) 인스턴스 메서드 <-> static 메서드로 서로 변경할 수 없다.	



10. final 키워드에 대해서 설명하세요. 
	변수 앞 : 상수선언  (지역변수, 인스턴스 변수, 클래스변수)
	메서드 앞 : 최종 메서드 - 더이상 오버라이딩 안됨
	클래스 앞 : 최종 클래스 - 더이상 상속안됨



11. 업캐스팅( upcastring)과 다운 캐스팅( downcastring )에 대해서 설명하세요.
	업캐스팅 : 자식 -> 부모 : 자동으로 형변환된다. 
			(부모 클래스 타입으로 참조하면 부모 클래스의 멤버(필드, 메서드)만 사용 가능
	다운캐스팅 : 부모 -> 자식 : cast연산자를 사용하여 강제로 형변환한다. 
			(부모 클래스 타입으로 참조된 객체를 자식 클래스 타입으로 변환하는 것)







